# Generated by Django 4.2.18 on 2025-02-09 11:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("ai_chatbots", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserChatSession",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("thread_id", models.TextField(unique=True)),
                ("title", models.CharField(blank=True, max_length=255)),
                ("agent", models.CharField(blank=True, max_length=128)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoCheckpointWrite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("thread_id", models.TextField()),
                ("checkpoint_ns", models.TextField()),
                ("checkpoint_id", models.TextField()),
                ("task_id", models.TextField()),
                ("idx", models.IntegerField()),
                ("channel", models.TextField()),
                ("type", models.TextField(blank=True, null=True)),
                ("blob", models.BinaryField()),
                ("task_path", models.TextField()),
                (
                    "session",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_chatbots.userchatsession",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("thread_id", "checkpoint_ns", "checkpoint_id", "task_id", "idx")
                },
            },
        ),
        migrations.CreateModel(
            name="DjangoCheckpoint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("thread_id", models.TextField()),
                ("checkpoint_ns", models.TextField()),
                ("checkpoint_id", models.TextField()),
                ("parent_checkpoint_id", models.TextField(blank=True, null=True)),
                ("type", models.TextField(blank=True, null=True)),
                ("checkpoint", models.BinaryField()),
                ("metadata", models.JSONField()),
                (
                    "session",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_chatbots.userchatsession",
                    ),
                ),
            ],
            options={
                "unique_together": {("thread_id", "checkpoint_ns", "checkpoint_id")},
            },
        ),
    ]
