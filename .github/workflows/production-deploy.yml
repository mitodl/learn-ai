name: Production Deploy
on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [release]
  workflow_dispatch: # manual trigger
jobs:
  on_success:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend-demo
    if: >
      github.event_name == 'workflow_dispatch' ||
      github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: "^22"
          cache: yarn
          cache-dependency-path: frontend-demo/yarn.lock

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build
        env:
          NODE_ENV: production
          # Learn-ai
          NEXT_PUBLIC_MITOL_API_BASE_URL: ${{ vars.API_BASE_PROD }}
          NEXT_PUBLIC_AI_CSRF_COOKIE_NAME: ${{ vars.AI_CSRF_COOKIE_NAME_PROD }}
          NEXT_PUBLIC_MIT_LEARN_AI_LOGIN_URL: ${{ vars.MIT_LEARN_AI_LOGIN_URL_PROD }}
          NEXT_PUBLIC_MIT_SEARCH_ELASTIC_URL: ${{ vars.MIT_SEARCH_ELASTIC_URL_PROD }}
          NEXT_PUBLIC_MIT_SEARCH_VECTOR_URL: ${{ vars.MIT_SEARCH_VECTOR_URL_PROD }}            
          # mi-learn
          NEXT_PUBLIC_MIT_LEARN_API_BASE_URL: ${{ vars.MIT_LEARN_API_BASE_URL_PROD }}
          NEXT_PUBLIC_MIT_LEARN_APP_BASE_URL: ${{ vars.MIT_LEARN_APP_BASE_URL_PROD }}
          # openedx
          NEXT_PUBLIC_OPENEDX_API_BASE_URL: ${{ vars.OPENEDX_API_BASE_URL_PROD }}
          NEXT_PUBLIC_OPENEDX_LOGIN_URL: ${{ vars.OPENEDX_LOGIN_URL_PROD }}

      - name: Write commit SHA to file
        run: echo $GITHUB_SHA > out/hash.txt

      - name: Upload frontend build to s3
        uses: jakejarvis/s3-sync-action@7ed8b112447abb09f1da74f3466e4194fc7a6311
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET_NAME_PROD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          SOURCE_DIR: "frontend-demo/out/"
          DEST_DIR: "frontend"

      - name: Purge Fastly cache
        uses: jcoene/fastly-purge-action@5beee4b3c93691dc5c0c0f1275f958d227ee53ea
        with:
          api_key: "${{ secrets.FASTLY_API_KEY_PROD }}"
          service_id: "${{ secrets.FASTLY_SERVICE_ID_PROD }}"
  on_failure:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'workflow_dispatch' ||
      github.event.workflow_run.conclusion == 'failure'
    steps:
      - run: echo 'The trigger workflow failed.'
