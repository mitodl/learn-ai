openapi: 3.0.3
info:
  title: Learn AI API
  version: 0.0.1 (v0)
  description: MIT public API
paths:
  /api/v0/chat_sessions/:
    get:
      operationId: chat_sessions_list
      description: Read-only API endpoint for listing and retrieving user chat sessions.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: thread_id
        schema:
          type: string
        description: thread id of the chat session
        required: true
      tags:
      - chat_sessions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserChatSessionList'
          description: ''
  /api/v0/chat_sessions/{thread_id}/:
    get:
      operationId: chat_sessions_retrieve
      description: Read-only API endpoint for listing and retrieving user chat sessions.
      parameters:
      - in: path
        name: thread_id
        schema:
          type: string
        description: thread id of the chat session
        required: true
      tags:
      - chat_sessions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChatSession'
          description: ''
  /api/v0/chat_sessions/{thread_id}/messages/:
    get:
      operationId: chat_sessions_messages_list
      description: |-
        Read-only API endpoint for returning just human/agent chat messages in a thread.
        Supports both listing all messages and retrieving individual checkpoints by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the AI response checkpoint
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: thread_id
        schema:
          type: string
        description: thread id of the chat session
        required: true
      tags:
      - chat_sessions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatMessageList'
          description: ''
  /api/v0/chat_sessions/{thread_id}/messages/{id}/:
    get:
      operationId: chat_sessions_messages_retrieve
      description: |-
        Read-only API endpoint for returning just human/agent chat messages in a thread.
        Supports both listing all messages and retrieving individual checkpoints by ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the AI response checkpoint
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        description: thread id of the chat session
        required: true
      tags:
      - chat_sessions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
          description: ''
  /api/v0/chat_sessions/{thread_id}/messages/{id}/rate/:
    post:
      operationId: chat_sessions_messages_rate_create
      description: Rate an AI response message
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the AI response checkpoint
        required: true
      - in: path
        name: thread_id
        schema:
          type: string
        description: thread id of the chat session
        required: true
      tags:
      - chat_sessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRatingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatRatingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatRatingRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRating'
          description: ''
  /api/v0/get_transcript_edx_module_id/:
    get:
      operationId: get_transcript_edx_module_id_retrieve
      description: API view to get the transcript block ID from edx block for a cotentfile.
      parameters:
      - in: path
        name: edx_module_id
        schema:
          type: string
        description: edx_module_id of the video content file
        required: true
      tags:
      - get_transcript_edx_module_id
      security:
      - {}
      responses:
        '200':
          description: Transcript block ID
        '500':
          description: Error retrieving transcript block ID
  /api/v0/llm_models/:
    get:
      operationId: llm_models_list
      description: API view to list available LLM models.
      parameters:
      - in: query
        name: provider
        schema:
          type: string
      tags:
      - llm_models
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LLMModel'
          description: ''
  /api/v0/llm_models/{litellm_id}/:
    get:
      operationId: llm_models_retrieve
      description: API view to list available LLM models.
      parameters:
      - in: path
        name: litellm_id
        schema:
          type: string
        description: A unique value identifying this llm model.
        required: true
      tags:
      - llm_models
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMModel'
          description: ''
  /api/v0/problem_set_list/:
    get:
      operationId: problem_set_list_retrieve
      description: API view to get a list of problem sets for a given course.
      parameters:
      - in: path
        name: run_readable_id
        schema:
          type: string
        description: run_readable_id of the course run
        required: true
      tags:
      - problem_set_list
      security:
      - {}
      responses:
        '200':
          description: List of problem sets
        '500':
          description: Error retrieving problem sets
  /api/v0/prompts/:
    get:
      operationId: prompts_list
      description: Return a list of system prompts.
      tags:
      - prompts
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemPrompt'
          description: ''
  /api/v0/prompts/{prompt_name}/:
    get:
      operationId: prompts_retrieve
      description: Return a specific system prompt.
      parameters:
      - in: path
        name: prompt_name
        schema:
          type: string
        description: name of the system prompt
        required: true
      tags:
      - prompts
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemPrompt'
          description: ''
  /http/recommendation_agent/:
    post:
      operationId: RecommendationAgentV0
      description: Recommendation agent endpoint via AsyncHttpConsumer
      tags:
      - Channels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The user's message to the AI
                model:
                  type: string
                  description: The LLM model to use
                temperature:
                  type: number
                  format: float
                  description: The LLM temperature to use
                instructions:
                  type: string
                  description: System prompt (admins only)
                clear_history:
                  type: boolean
                  description: Whether to clear chat history
                thread_id:
                  type: string
                  description: The thread id to use
              required:
              - message
      responses:
        '200':
          description: Recommendation Agent stream
          content:
            text/event-stream:
              schema:
                type: string
  /http/syllabus_agent/:
    post:
      operationId: SyllabusAgentV0
      description: Syllabus agent endpoint via AsyncHttpConsumer
      tags:
      - Channels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The user's message to the AI
                course_id:
                  type: string
                  description: The course id
                collection_name:
                  type: string
                  description: Vector embedding collection name
                model:
                  type: string
                  description: The LLM model to use
                temperature:
                  type: number
                  format: float
                  description: The LLM temperature to use
                instructions:
                  type: string
                  description: System prompt (admins only)
                clear_history:
                  type: boolean
                  description: Whether to clear chat history
                thread_id:
                  type: string
                  description: The thread id to use
              required:
              - message
              - course_id
      responses:
        '200':
          description: Recommendation Agent stream
          content:
            text/event-stream:
              schema:
                type: string
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    ChatMessage:
      type: object
      description: |-
        Serializer for chat messages.  This serializer is used to return just the message,
        content and role, and is intended to backfill chat history in a frontend UI.
      properties:
        id:
          type: integer
          readOnly: true
        checkpoint_id:
          type: string
        role:
          type: string
          description: 'Message role. Valid options: ''agent'', ''human'''
          readOnly: true
        step:
          type: integer
          description: Order of the message in the conversation
          readOnly: true
        thread_id:
          type: string
        content:
          type: string
          description: Message content
          readOnly: true
        rating:
          allOf:
          - $ref: '#/components/schemas/ChatRating'
          readOnly: true
      required:
      - checkpoint_id
      - content
      - id
      - rating
      - role
      - step
      - thread_id
    ChatRating:
      type: object
      description: Serializer for creating and updating chat response ratings
      properties:
        rating:
          oneOf:
          - $ref: '#/components/schemas/RatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        rating_reason:
          type: string
    ChatRatingRequest:
      type: object
      description: Serializer for creating and updating chat response ratings
      properties:
        rating:
          oneOf:
          - $ref: '#/components/schemas/RatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        rating_reason:
          type: string
    LLMModel:
      type: object
      properties:
        provider:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
        litellm_id:
          type: string
          maxLength: 512
      required:
      - litellm_id
      - name
      - provider
    PaginatedChatMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
    PaginatedUserChatSessionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserChatSession'
    RatingEnum:
      enum:
      - like
      - dislike
      type: string
      description: |-
        * `like` - Like
        * `dislike` - Dislike
        * `` - No Rating
      x-enum-descriptions:
      - Like
      - Dislike
    SystemPrompt:
      type: object
      description: Serializer for system prompts
      properties:
        prompt_name:
          type: string
        prompt_value:
          type: string
      required:
      - prompt_name
      - prompt_value
    UserChatSession:
      type: object
      description: Serializer for user chat sessions
      properties:
        thread_id:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        user:
          type: integer
          readOnly: true
          nullable: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - thread_id
      - updated_on
      - user
