services:
  db:
    image: postgres:12.22
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 5433:5433
    environment:
      - PGPORT=5433
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql

  redis:
    image: redis:7.4.2
    healthcheck:
      test: ["CMD", "redis-cli", "ping", "|", "grep", "PONG"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - "6379"

  nginx:
    build:
      context: ./nginx
    ports:
      - "8002:8002"
    links:
      - web
    environment:
      PORT: 8002
      NGINX_UWSGI_PASS: "web:8001"
    volumes:
      - ./config:/etc/nginx/templates

  litellm:
    build:
      dockerfile: Dockerfile-litellm
    ports:
      - "4000:4000"
    env_file:
      - path: env/backend.env
      - path: env/backend.local.env
        required: false
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5433/litellm
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config:/app

volumes:
  pgdata:
  # note: these are here instead of docker-compose.apps.yml because `extends` doesn't pull them in
  django_media:
  yarn-cache:
